services:
  
  kafka-broker:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.1
    container_name: broker
    command: |
      redpanda start
      --smp 1
      --overprovisioned
      --node-id 0
      --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      --advertise-kafka-addr internal://kafka-broker:9092,external://localhost:19092
      --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      --advertise-pandaproxy-addr internal://kafka-broker:8082,external://localhost:18082
      --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      --rpc-addr kafka-broker:33145
      --advertise-rpc-addr kafka-broker:33145
      --mode dev-container
      --set auto_create_topics_enabled=true
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644

  console:
    image: docker.redpanda.com/redpandadata/console:v2.5.2
    entrypoint: /bin/sh
    command: |-
      -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    ports:
      - 8080:8080
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: >
        kafka:
          brokers: ["kafka-broker:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka-broker:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://kafka-broker:9644"]
        connect:
          enabled: true
          clusters:
            - name: connect
              url: http://connect:8083

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: iot_db
    ports:
      - "5432:5432"
    volumes:
      - ./psql:/docker-entrypoint-initdb.d
      - database_data:/var/lib/postgresql/data

  producer:
    image: python:3.9.20-slim
    container_name: producer
    depends_on:
      - kafka-broker
    volumes:
      - ./data:/usr/src/data
      - ./scripts/producer:/usr/src/app
    command: bin/sh -c 'cd /usr/src/app && pip install --no-cache-dir -r requirements.txt && python3 producer.py'

  transformer:
    image: python:3.9.20-slim
    container_name: transformer
    depends_on:
      - kafka-broker
    volumes:
      - ./scripts/transformer:/usr/src/app
    command: bin/sh -c 'cd /usr/src/app && pip install --no-cache-dir -r requirements.txt && python3 transformer.py'

  loader:
    image: python:3.9.20-slim
    container_name: loader
    depends_on:
      - kafka-broker
    volumes:
      - ./scripts/loader:/usr/src/app
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=iot_db
      - POSTGRES_HOST=postgres 
      - POSTGRES_PORT=5432
    command: bin/sh -c 'cd /usr/src/app && pip install --no-cache-dir -r requirements.txt && python3 loader.py'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - provisioning:/etc/grafana/provisioning


volumes:
  provisioning:
  database_data: